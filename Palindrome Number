Given an integer x, return true if x is palindrome integer.

An integer is a palindrome when it reads the same backward as forward.

For example, 121 is a palindrome while 123 is not.
 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1


CODE:

class Solution:
    def isPalindrome(self, x: int) -> bool:
        list1 = [str(a) for a in str(x)]
        list2 = list1.copy()
        list2.reverse()
        list3 = []
        for i in range (len(list1)):
            for j in range (len(list2)):
                if i==j:        
                    if list1[i] == list2[j]:
                        list3.append(list1[i])
                    else:
                         return False
                else:
                    continue
        if list1 == list3:
            return True
