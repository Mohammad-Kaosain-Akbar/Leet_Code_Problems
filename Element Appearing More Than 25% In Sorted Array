Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

 

Example 1:

Input: arr = [1,2,2,6,6,6,6,7,10]
Output: 6
Example 2:

Input: arr = [1,1]
Output: 1
 

Constraints:

1 <= arr.length <= 104
0 <= arr[i] <= 105


-----------------------------------------------------------------------------------------------

class Solution(object):
    def findSpecialInteger(self, arr):
        li=set(arr)
        li = list(li)
        flag = []
  
  
        for i in range(len(li)):
            a = arr.count(li[i])
            flag.append(a)

        max_value = max(flag)
        max_index = flag.index(max_value)

        return li[max_index]
